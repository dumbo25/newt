# configuration file for django.sh

# Django project name used with:
#    cd ~/.
#    django-admin startproject "$DjangoProject"
Name="Newt MicroSD Card Duplicator"
DjangoProject="Test_Project"
MinimumDjangoVersion="3.2.8"

# Help message
read -r -d '' Help <<- EOM
${Bold}NAME${Normal}
     django.sh is a generic bash script that sets up a Dhjango project and its
     apps

${Bold}SYNOPSIS${Normal}
     sudo bash [-bashOptions] django.sh [-installOptions]

${Bold}DESCRIPTION${Normal}
     The django.sh script sets up the project, apps and directories for a simple
     django website.

     In case a mistake is made in playing around with the system, the django
     overwrites previous installs, bringing it back to a known good state.

${Bold}USAGE${Normal}
     ??? need to write this section ???

${Bold}OPTIONS${Normal}
     c    ??? need to define the options ???
     h    This help
     r    Disable reboot
     u    Skip update and upgrade

${Bold}TURORIAL${Normal}
     https://sites.google.com/site/cartwrightraspberrypiprojects/microsd-card-duplicator

EOM

# list of all the django apps to create, used with:
#    cd ~/"$Project"
#    django-admin startapp <each DjangoApp>
declare -a DjangoApps=("newt" "polls")

# list of all raspbian packages to install
declare -a DebianPackages=()

# list of python packages to install
declare -a Pip3Packages=()

# Files to get from github
declare -a GitFiles=(\
)

# get a github repository
GitClone=""

# Files
# Bash doesn't have multidimensional tables. So, this is my hack to pretend it does
# Each enttry is a row in a table and includes: "filename;fromPath;toPath"
#   do not put / at end of toPath or fromPath
#   to create a path and its directories: ";;toPath"
declare -a MoveFiles=(\
)

# The script is run as sudo. So, root owns any moved or retrieved files or created
# directories. This structure and the associated function in install.shchanges 
# ownership to the correct owner. Each entry contains 1) either a filename with path 
# or a path, and 2) its ownership
#
# Each column in the row is separated by ;
#
# If only a directory is given, then chown is done on all subdirectories and files
# So, Change only has to be done on /var/www and it will change /var/www/hmtl,
# /var/www/css, /var/www/images, /var/www/html/index.htm and so on
declare -a ChangeOwnership=(\
)

declare -a ChangePermissions=(\
)

# remove files and directories that are not needed
# Always leave LICENSE.md and READ.md
declare -a CleanUp=(\
)

# list of services to reload
declare -a ReloadServices=()

# list of services to restart
declare -a RestartServices=("apache2.service")

ExitMessage=""
